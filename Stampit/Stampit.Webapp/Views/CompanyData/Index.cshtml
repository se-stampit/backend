@using Stampit.CommonType;
@model Stampit.Entity.Company
<div class="container">
	<div class="row">
		<div class="col-md-6">
			@using (Html.BeginForm("SaveData", "CompanyData", FormMethod.Post))
			{
				@Html.AntiForgeryToken()

				<div class="form-horizontal">
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.Id)

					<div class="form-group">
						@Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.ContactAddress, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.ContactAddress, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.ContactAddress, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.ContactName, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.ContactName, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
							@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						<div class="col-md-offset-2 col-md-10">
							<input type="submit" value="Save" class="btn btn-default">
						</div>
					</div>
				</div>
			}
		</div>
		<div class="col-md-6">
			@using (Html.BeginForm("SaveImage", "CompanyData", FormMethod.Post, new { enctype = "multipart/form-data" }))
			{
				@Html.AntiForgeryToken()

				<div class="form-horizontal">
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.Id)
					<div class="form-group">
						<div class="col-md-12">
							@if (Model.Blob == null)
							{
								<img src="~/Content/Images/Unknown.png" width="200" height="200" />
							}
							else
							{
								<img src="@($"data:image/png;base64,{Model.Blob.Content.ToBase64()}")" width="200" height="200" />
							}
						</div>
					</div>
					<div class="form-group">
						<input id="file" type="file" name="file" class="btn btn-default">
						<br />
						<input type="submit" value="Save" class="btn btn-default">
					</div>
				</div>
			}
		</div>
	</div>
</div>