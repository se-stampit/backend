@{
	Layout = "~/Views/Shared/_LayoutPartial.cshtml";
}
<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>

<!-- This css is to ensure that the google map contols (zoom bar etc) show and size correctly. -->
<style>
	#map_canvas img {
		max-width: none;
	}
</style>0

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
	.infoDiv {
		height: 200px;
		width: 300px;
		-webkit-user-select: none;
		background-color: white;
	}
</style>
<input type="submit" value="Create new" class="btn btn-default" />
<!-- This is the div that will contain the Google Map -->
<div id="map_canvas" style="height: 600px;"></div>

<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {
	<section class="scripts">

		<script type="text/javascript">

			$(document).ready(function () {
				Initialize();
			});

			// Where all the fun happens
			function Initialize() {

				// Google has tweaked their interface somewhat - this tells the api to use that new UI
				google.maps.visualRefresh = true;

				// a sample list of JSON encoded data of places to visit in Liverpool, UK
				// you can either make up a JSON list server side, or call it from a controller using JSONResult
				var data = [
							{ "Id": 1, "PlaceName": "Fussal", "Address": "Landstraße 15", "Longitude": "48.303487", "Latitude": "14.288781" , "Description": "MyFrozenyogurt, MyCafé, MyDonuts und MyYogurt"},
							{ "Id": 2, "PlaceName": "Fussal", "Address": "Landstraße 55", "Longitude": "48.303487", "Latitude": "14.285555" , "Description": "MyFrozenyogurt, MyCafé, MyDonuts und MyYogurt" }
						
				];
				var model = @Html.Raw(Json.Encode(Model));
				
				var Linz = new google.maps.LatLng(48.303487, 14.288781);

				// These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
				var mapOptions = {
					zoom: 14,
					center: Linz,
					mapTypeId: google.maps.MapTypeId.ROADMAP
					
				};

				// This makes the div with id "map_canvas" a google map
				var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

				// Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
	
				$.each(data, function (i, item) {
					var marker = new google.maps.Marker({
						'position': new google.maps.LatLng(item.Longitude, item.Latitude),
						'map': map,
						'title': item.Address
					});

					// Make the marker-pin blue!
					marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png')

					// put in some information about each json object - in this case, the opening hours.
					var infowindow = new google.maps.InfoWindow({
						content: "<div class='infoDiv'><h2>" + item.PlaceName + "</h2>" + "<div><h4>" + item.Address + "</h4></div>" + "<div><h5>"+ item.Description+ "</h5></div></div>"
					});

					// finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
					google.maps.event.addListener(marker, 'click', function () {
						infowindow.open(map, marker);
					});

				})
			}


		</script>
	</section>
}
